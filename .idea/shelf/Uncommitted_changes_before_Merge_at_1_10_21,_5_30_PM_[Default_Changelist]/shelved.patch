Index: src/router.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from './views/Home.vue'\nimport Organizations from './views/Organizations.vue'\nimport Organization from './views/Organization.vue'\nimport Contacts from './views/Contacts.vue'\nimport Contact from './views/Contact.vue'\nimport Register from './views/Register.vue'\nimport User from './views/User'\nimport Users from './views/Users'\n\nVue.use(Router)\nexport default new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home\n    },\n    {\n      path: '/register',\n      name: 'register',\n      component: Register\n    },\n    {\n      path: '/organizations',\n      name: 'organizations',\n      component: Organizations\n    },\n    {\n      path: '/organization/:organizationId',\n      name: 'organization',\n      component: Organization\n    },\n    {\n      path: '/contacts',\n      name: 'contacts',\n      component: Contacts\n    },\n\n    {\n      path: '/contact/:personId',\n      name: 'contact',\n      component: Contact\n    },\n    {\n      path: '/users',\n      name: 'users',\n      component: Users\n    },\n    {\n      path: '/user/:personId',\n      name: 'user',\n      component: User\n    },\n  ]\n})\n
===================================================================
--- src/router.js	(revision 9d2efd8714c367315bb5f9c68632afe37c513c49)
+++ src/router0.js	(date 1610317645405)
@@ -6,7 +6,7 @@
 import Contacts from './views/Contacts.vue'
 import Contact from './views/Contact.vue'
 import Register from './views/Register.vue'
-import User from './views/User'
+import User from './views/User0'
 import Users from './views/Users'
 
 Vue.use(Router)
Index: src/config/db.config.js
===================================================================
--- src/config/db.config.js	(revision 9d2efd8714c367315bb5f9c68632afe37c513c49)
+++ src/config/db.config.js	(revision 9d2efd8714c367315bb5f9c68632afe37c513c49)
@@ -1,1 +0,0 @@
-
Index: src/views/Users.vue
===================================================================
--- src/views/Users.vue	(revision 9d2efd8714c367315bb5f9c68632afe37c513c49)
+++ src/views/Users.vue	(revision 9d2efd8714c367315bb5f9c68632afe37c513c49)
@@ -1,331 +0,0 @@
-<template>
-  <v-container>
-    <div align="center" class="red--text text--darken-4 page-title">Users</div>
-    <v-row>
-
-      <v-col class="col-12">
-        <v-card elevation="3 text-wrap">
-          <v-card-text>
-          <v-row>
-            <v-col class="col-6">
-              <v-text-field
-                v-model="search"
-                append-icon="mdi-magnify"
-                label="Search Table"
-                single-line
-              ></v-text-field>
-            </v-col>
-          </v-row>
-        <v-data-table
-          :headers="headers"
-          :items="volunteers"
-          :search="search"
-          item-key="id"
-          multi-sort
-          class="text-capitalize"
-        >
-          <template v-slot:item.name="{ item }">
-            <template v-if="item.first_name !== null">
-              <a v-on:click="nav(item)">
-              <span class="black--text">  {{ item.name }}</span>
-              <span v-if="item.public_safety"> (Public Safety)</span></a>
-            </template>
-            <template v-else-if="item.partner !== null">
-              <a v-on:click="nav(item)">
-              <span class="purple--text">{{ item.name }}</span>
-              <span v-if="item.public_safety"> (Public Safety)</span></a>
-            </template>
-          </template>
-          <template v-slot:item.address="{ item }">
-            <address>
-              {{ item.address }}
-            </address>
-          </template>
-          <template v-slot:item.email="{ item }">
-            <a v-on:click="nav(item)">
-            <div><span class="black--text">
-              {{ item.user.email }}
-            </span></div> </a>
-              </template>
-              <template v-slot:item.roles="{ item }">
-                <div>
-                  <span class="purple--text">{{ item.role }}</span>
-                </div>
-              </template>
-              <template v-slot:[`item.actions`]="{ item }">
-                <v-icon small @click="removePerson(item)">mdi-delete</v-icon>
-              </template>
-            </v-data-table>
-          </v-card-text>
-        </v-card>
-        <!------------------ dialog box to add person--------------------------->
-        <v-dialog v-model="add_person_dlg" max-width="600px">
-          <template v-slot:activator="{ on, attrs }">
-            <v-hover v-slot="{ hover }" open-delay="200">
-              <v-btn
-                  text
-                  :elevation="hover ? 16 : 2"
-                  :class="{ 'on-hover': hover }"
-                  v-bind="attrs"
-                  v-on="on"
-              >
-                Add User
-                <v-icon> mdi-plus </v-icon>
-              </v-btn>
-            </v-hover>
-          </template>
-          <v-card>
-            <v-form>
-              <v-card-title>
-                <span class="headline">Add User</span>
-              </v-card-title>
-              <v-card-text>
-                <v-container>
-                  <v-row>
-                    <v-col cols="6" sm="6" md="6">
-                      <v-text-field
-                          label="First Name"
-                          required
-                          v-model="add_person.firstname"
-                      ></v-text-field>
-                    </v-col>
-                    <v-col cols="6" sm="6" md="6">
-                      <v-text-field
-                          label="Last Name"
-                          required
-                          v-model="add_person.lastname"
-                      ></v-text-field>
-                    </v-col>
-                    <v-col cols="6" sm="6" md="6"> </v-col>
-                  </v-row>
-                  <v-row>
-                    <v-col cols="6">
-                      <v-text-field
-                          label="Email"
-                          v-model="add_person.email"
-                      ></v-text-field>
-                    </v-col>
-                    <v-col cols="6">
-                      <v-text-field
-                          label="Password"
-                          v-model="add_person.password"
-                      ></v-text-field>
-                    </v-col>
-                  </v-row>
-                  <v-row>
-                    <v-col cols="6">
-                      <v-text-field
-                          label="Phone"
-                          v-model="add_person.phone"
-                      ></v-text-field>
-                    </v-col>
-                  </v-row>
-
-                </v-container>
-                <small>*indicates required field</small>
-              </v-card-text>
-              <v-card-actions>
-                <v-spacer></v-spacer>
-                <v-btn color="blue darken-1" text @click="add_person_dlg = false">
-                  Close
-                </v-btn>
-                <v-btn color="blue darken-1" text @click="addPerson">
-                  Save
-                </v-btn>
-              </v-card-actions>
-            </v-form>
-          </v-card>
-        </v-dialog>
-        <!--------------------- dialog box to add person closed-------------------->
-
-        <!-- <button class="m-3 btn btn-sm btn-danger" @click="removeAllVolunteers">
-          Remove All
-        </button> -->
-        <!--      </v-col>-->
-      </v-col>
-    </v-row>
-  </v-container>
-</template>
-
-<script>
-import UserDataService from "../services/UserDataService";
-import UserRoleDataService from "../services/UserRoleDataService";
-import PhoneDataService from "@/services/PhoneDataService";
-import EmailDataService from "@/services/EmailDataService";
-
-export default {
-  name: "users",
-  data() {
-    return {
-      volunteers: [],
-      add_person_dlg: false,
-      currentVolunteer: null,
-      search: "",
-      currentIndex: -1,
-      name: "",
-      role: "",
-      add_person: {
-        firstname: "",
-        lastname: "",
-        email: "",
-        password: "",
-        phone: "",
-      },
-      add_role: {
-        roles: "",
-      },
-      view_person: {
-        firstname: "",
-        lastname: "",
-      },
-    };
-  },
-  computed: {
-    headers() {
-      var headers = [
-        { text: "Name", value: "name", width: "80px" },
-        { text: "Email", value: "email", width: "80px" },
-        { text: "Roles", value: "role", width: "100px" },
-        {text: 'Delete', value: 'actions', width: '1%'}
-      ]
-      return headers;
-    },
-  },
-  methods: {
-    nav(item) {
-      // add dialog page to display the full info
-      this.$router.push({ path: "User/" + item.id });
-      //   }
-      // console.log(item.id+" is the ID(1)");
-    },
-    retrieveVolunteers() {
-      UserDataService.getAll()
-          .then((response) => {
-            console.log(response.data);
-            this.volunteers = response.data;
-            this.volunteers.forEach((volunteer) => {
-
-              volunteer.name = volunteer.first_name + " " + volunteer.last_name;
-              console.log(volunteer.name);
-              //TODO: Review this
-              let roleNumber = volunteer.user.roles[0].id
-              let roleName = "";
-
-              console.log(roleNumber);
-              if(roleNumber == 2) {
-                roleName = "User"
-              } else {
-                roleName = "Admin"
-              }
-              console.log(roleName);
-              volunteer.role = roleName
-            });
-            // console.log(this.volunteers);
-          })
-          .catch((e) => {
-            console.log(e.message);
-          });
-    },
-
-    refreshList() {
-      this.retrieveVolunteers();
-      this.currentVolunteers = null;
-      this.currentIndex = -1;
-    },
-
-    setActiveVolunteer(volunteer, index) {
-      this.currentVolunteer = volunteer;
-      this.currentIndex = index;
-    },
-    addPerson() {
-      var data = {
-        first_name: this.add_person.firstname,
-        last_name: this.add_person.lastname,
-        email: this.add_person.email,
-        password: this.add_person.password,
-      };
-      var userData = {
-        roles: this.add_role.roles,
-      };
-
-      data.services = this.add_person.services;
-      UserDataService.create(data)
-          .then((response) => {
-
-            console.log(response.data.personId);
-
-            let data = {
-              userId: response.data.userId,
-              roleId: 2,
-            };
-
-            let phoneData = {
-              personId: response.data.personId,
-              number: this.add_person.phone,
-              isPrimary: true
-            }
-            let emailData = {
-              personId: response.data.personId,
-              address: this.add_person.email,
-              isPrimary: true
-            }
-
-            PhoneDataService.create(phoneData);
-            EmailDataService.create(emailData);
-
-            UserRoleDataService.create(data)
-                .then((resp) => {
-                  this.refreshList();
-                })
-                .catch((err) => {
-                  console.log(err);
-                });
-
-
-            this.refreshList();
-          })
-          .catch((e) => {
-            console.log(e);
-          });
-      this.add_person_dlg = false;
-    },
-
-    removePerson(item) {
-      if (
-          confirm(
-              "Are you sure you want to remove " +
-              item.first_name +
-              " " +
-              item.last_name +
-              " from the table?"
-          )
-      ) {
-        UserDataService.delete(item.id)
-            .then((response) => {
-              this.refreshList();
-            })
-            .catch((e) => {
-              console.log(e);
-            });
-      }
-    },
-  },
-  mounted() {
-    this.retrieveVolunteers();
-  },
-};
-</script>
-
-<style scoped>
-.list {
-  text-align: left;
-  max-width: 750px;
-  margin: auto;
-}
-.button {
-  color: grey;
-}
-.input {
-  border: 5px;
-}
-</style>
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/node_modules/\n/uploads/\n/src/http-common.js\n/src/config/db.config.js\n/src/config/\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(revision 9d2efd8714c367315bb5f9c68632afe37c513c49)
+++ .gitignore	(date 1610317645393)
@@ -1,5 +1,5 @@
 /node_modules/
 /uploads/
 /src/http-common.js
-/src/config/db.config.js
+/src/config/db.config0.js
 /src/config/
Index: src/views/User.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\">\n        <div align=\"center\" class=\"red--text text--darken-4 page-title\">\n          User Info\n        </div>\n      </v-col>\n    </v-row>\n    <v-row\n      ><!---------------------First Container Row-------------------------------->\n      <v-col class=\"col-7\"\n        ><!----------------------Left Column-------------------------->\n        <!---------------------Contact Basic Data-------------------------------->\n        <v-row>\n          <v-col class=\"offset-1 col-10\">\n            <v-card elevation=\"3\">\n              <v-card-title>\n                <v-row>\n                  <v-col>\n                    <span class=\"text-h4 font-weight-thin\">\n                      {{ edit_person.first_name + \" \" + edit_person.last_name }}\n                    </span>\n                    <v-row>\n                      <span class=\"text-h6 font-weight-thin\">\n                        {{ \"Roles: \" + view_role.role }}\n                      </span>\n                    </v-row>\n                  </v-col>\n                  <v-col class=\"col-2\">\n                    <!---------------------------------Edit Contact Dialog------------------------------->\n                    <v-dialog v-model=\"edit_person_dlg\" max-width=\"600px\">\n                      <template v-slot:activator=\"{ on, attrs }\">\n                        <v-hover v-slot=\"{ hover }\" open-delay=\"200\">\n                          <v-btn\n                            icon\n                            :elevation=\"hover ? 16 : 2\"\n                            :class=\"{ 'on-hover': hover }\"\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                          >\n                            <v-icon> mdi-pencil </v-icon>\n                          </v-btn>\n                        </v-hover>\n                      </template>\n                      <v-card>\n                        <v-form>\n                          <v-card-title>\n                            <span class=\"headline\">User Information</span>\n                          </v-card-title>\n                          <v-card-text>\n                            <v-container>\n                              <v-row>\n                                <v-col cols=\"6\" sm=\"6\" md=\"6\">\n                                  <v-text-field\n                                    label=\"First Name\"\n                                    required\n                                    v-model=\"edit_person.first_name\"\n                                  ></v-text-field>\n                                </v-col>\n                                <v-col cols=\"6\" sm=\"6\" md=\"6\">\n                                  <v-text-field\n                                    label=\"Last Name\"\n                                    required\n                                    v-model=\"edit_person.last_name\"\n                                  ></v-text-field>\n                                </v-col>\n                                <v-col cols=\"6\" sm=\"6\" md=\"6\"> </v-col>\n                              </v-row>\n                              <v-row>\n                                <v-col cols=\"6\">\n                                  <v-text-field\n                                    label=\"Email\"\n                                    v-model=\"edit_user.email\"\n                                  ></v-text-field>\n                                </v-col>\n                                <v-col cols=\"6\">\n                                  <v-text-field\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    v-model=\"edit_user.password\"\n                                  ></v-text-field>\n                                </v-col>\n                              </v-row>\n                              <v-row>\n                                <v-row>\n                                  <v-col cols=\"6\">\n                                    <v-autocomplete\n                                      label=\"User Role\"\n                                      v-model=\"view_role.role\"\n                                      :items=\"role\"\n                                      item-text=\"name\"\n                                      item-value=\"id\"\n                                    >\n                                      {{ view_role.role }}\n                                    </v-autocomplete>\n                                  </v-col>\n                                  <v-col cols=\"6\">\n                                    <v-text-field\n                                        label=\"Phone\"\n                                        v-model=\"edit_contact.phone\"\n                                    ></v-text-field>\n                                  </v-col>\n                                </v-row>\n                              </v-row>\n                            </v-container>\n                            <small>*indicates required field</small>\n                          </v-card-text>\n                          <v-card-actions>\n                            <v-spacer></v-spacer>\n                            <v-btn\n                              color=\"blue darken-1\"\n                              text\n                              @click=\"edit_person_dlg = false\"\n                            >\n                              Close\n                            </v-btn>\n                            <v-btn\n                              color=\"blue darken-1\"\n                              text\n                              @click=\"updatePerson\"\n                            >\n                              Save\n                            </v-btn>\n                          </v-card-actions>\n                        </v-form>\n                      </v-card>\n                    </v-dialog>\n                  </v-col>\n                </v-row>\n              </v-card-title>\n              <v-divider></v-divider>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\nimport UserDataService from \"../services/UserDataService\";\nimport RoleDataService from \"../services/RoleDataService\";\nimport UserRoleDataService from \"../services/UserRoleDataService\";\nimport EmailDataService from \"@/services/EmailDataService\";\nimport PhoneDataService from \"@/services/PhoneDataService\";\nconst crypto = require('crypto');\n\nexport default {\n  data() {\n    return {\n      selectedRole: '',\n      role: ['Admin', 'User'],\n      edit_person_dlg: false,\n      person: {\n        first_name: \"\",\n        last_name: \"\",\n      },\n      edit_person: {\n        first_name: \"\",\n        last_name: \"\",\n      },\n      edit_user: {\n        password: \"\",\n        email: \"\",\n      },\n      edit_role: {\n        role: \"\",\n        userId: \"\",\n      },\n      view_role: {\n        role: \"\",\n      },\n      edit_contact: {\n        phone: \"\",\n      },\n      contact_id: {\n        phone: \"\",\n        email: \"\",\n      }\n    };\n  },\n  methods: {\n    updateSelectedRole(role) {\n      let updatedRoleId = '';\n      let currentRole = '';\n      if(role === \"User\") {\n        updatedRoleId = 2;\n        currentRole = 1;\n      } else {updatedRoleId = 1;\n      currentRole = 2;}\n      var data = {\n        userId: this.edit_role.userId,\n        roleId: currentRole\n      }\n      var currentDataRole = {\n        roleId: updatedRoleId\n      }\n      UserRoleDataService.update(data.userId, data.roleId, currentDataRole)\n      .then((response)=> {\n        console.log(response);\n      })\n      .catch((e)=> {\n        console.log(e);\n      })\n    },\n    populateRoles() {\n      RoleDataService.getAll()\n        .then((response) => {\n          this.roles = response.data;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    showDialog() {\n      this.edit_person_dlg = true;\n    },\n    setPerson() {\n      this.populateRoles();\n      UserDataService.get(this.$route.params.personId)\n        .then((response) => {\n          console.log(response);\n          let userRole = response.data.user.roles[0].user_roles.roleId\n          console.log(response.data.user.id);\n          console.log(userRole);\n          this.edit_role.userId = response.data.user.id;\n          this.edit_person = response.data;\n          this.edit_user = response.data.user;\n          this.edit_contact.phone = response.data.phones[0].number;\n\n          this.contact_id.phone = response.data.phones[0].id;\n          this.contact_id.email = response.data.emails[0].id;\n\n          if(userRole == 2) {\n            this.view_role.role = \"User\";\n          } else {this.view_role.role = \"Admin\"}\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n  generateSalt() {\n      return crypto.randomBytes(16).toString('base64');\n    },\n    encryptPassword(plainText, salt) {\n      return crypto\n          .createHash('sha256')\n          .update(plainText)\n          .update(salt)\n          .digest('hex')\n    },\n    updatePerson() {\n\n      let salt = this.generateSalt();\n      let password = this.encryptPassword(this.edit_user.password, salt)\n\n      var data = {\n        first_name: this.edit_person.first_name,\n        last_name: this.edit_person.last_name,\n        email: this.edit_user.email,\n        password: password,\n        salt: salt\n      };\n      console.log(data);\n      var personID = this.$route.params.personId;\n      //data.services = this.add_person.services;\n\n      var updatePhone = {\n        number: this.edit_contact.phone,\n        isPrimary: true\n      }\n      var updateEmail = {\n        address: this.edit_user.email,\n        isPrimary: true\n      }\n\n      PhoneDataService.update( this.contact_id.phone, updatePhone);\n      EmailDataService.update(this.contact_id.email, updateEmail);\n\n      UserDataService.update(personID, data)\n        .then((response) => {\n          // console.log(response);\n          //this.retrieveVolunteers();\n          console.log(response);\n        })\n        .then((id) => {\n          console.log(id);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n      this.edit_person_dlg = false;\n      console.log(this.view_role.role);\n      this.updateSelectedRole(this.view_role.role)\n    },\n  },\n  mounted() {\n    this.setPerson();\n  },\n};\n</script>\n
===================================================================
--- src/views/User.vue	(revision 9d2efd8714c367315bb5f9c68632afe37c513c49)
+++ src/views/User0.vue	(date 1610316505028)
@@ -44,7 +44,7 @@
                         </v-hover>
                       </template>
                       <v-card>
-                        <v-form>
+                        <v-form v-model="valid" lazy-validation>
                           <v-card-title>
                             <span class="headline">User Information</span>
                           </v-card-title>
@@ -56,6 +56,7 @@
                                     label="First Name"
                                     required
                                     v-model="edit_person.first_name"
+                                    :rules="nameRules"
                                   ></v-text-field>
                                 </v-col>
                                 <v-col cols="6" sm="6" md="6">
@@ -63,6 +64,7 @@
                                     label="Last Name"
                                     required
                                     v-model="edit_person.last_name"
+                                    :rules="nameRules"
                                   ></v-text-field>
                                 </v-col>
                                 <v-col cols="6" sm="6" md="6"> </v-col>
@@ -72,6 +74,7 @@
                                   <v-text-field
                                     label="Email"
                                     v-model="edit_user.email"
+                                    :rules="emailRules"
                                   ></v-text-field>
                                 </v-col>
                                 <v-col cols="6">
@@ -99,6 +102,7 @@
                                     <v-text-field
                                         label="Phone"
                                         v-model="edit_contact.phone"
+                                        :rules="phoneRules"
                                     ></v-text-field>
                                   </v-col>
                                 </v-row>
@@ -118,6 +122,7 @@
                             <v-btn
                               color="blue darken-1"
                               text
+                              :disabled="!valid"
                               @click="updatePerson"
                             >
                               Save
@@ -176,7 +181,24 @@
       contact_id: {
         phone: "",
         email: "",
-      }
+      },
+      nameRules: [
+        v => !!v || "Required",
+        v => /\D\S$/.test(v) || "No white or empty spaces",
+      ],
+      emailRules: [
+        v => !!v || "Required",
+        v => /.+@.+\..+/.test(v) || "E-mail must be valid",
+      ],
+      phoneRules: [
+        v => !!v || "Required",
+        v => /\S\d$/.test(v) || "Phone number must be valid",
+      ],
+      show1: false,
+      rules: {
+        required: (value) => !!value || "Required.",
+        min: (v) => (v && v.length >= 1) || "Min 5 characters",
+      },
     };
   },
   methods: {
Index: src/main.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+> import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport vuetify from './plugins/vuetify';\nimport Toasted from 'vue-toasted';\nimport VueSession from 'vue-session';\n\nVue.use(VueSession);\nVue.use(Toasted);\nVue.config.productionTip = false;\n\nVue.prototype.$authenticated = false;\nnew Vue({\n    router,\n    vuetify,\n    render: h => h(App)\n}).$mount('#app')\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main.js	(revision 9d2efd8714c367315bb5f9c68632afe37c513c49)
+++ src/main.js	(date 1610317695826)
@@ -1,6 +1,6 @@
  import Vue from 'vue';
 import App from './App.vue';
-import router from './router';
+import router from './router0';
 import vuetify from './plugins/vuetify';
 import Toasted from 'vue-toasted';
 import VueSession from 'vue-session';
Index: src/models/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const dbConfig = require(\"../config/db.config.js\");\n\nconst Sequelize = require(\"sequelize\");\nconst sequelize = new Sequelize(dbConfig.DB, dbConfig.USER, dbConfig.PASSWORD, {\n  host: dbConfig.HOST,\n  dialect: dbConfig.dialect,\n  operatorsAliases: 0,\n\n  pool: {\n    max: dbConfig.pool.max,\n    min: dbConfig.pool.min,\n    acquire: dbConfig.pool.acquire,\n    idle: dbConfig.pool.idle\n  }\n});\n\nconst db = {};\n\ndb.Sequelize = Sequelize;\ndb.sequelize = sequelize;\n\n//Convert to db objects here\ndb.organization = require(\"./organization.model.js\")(sequelize, Sequelize);\ndb.note = require(\"./note.model.js\")(sequelize, Sequelize);\ndb.partner = require(\"./partner.model.js\")(sequelize, Sequelize);\ndb.phone = require(\"./phone.model.js\")(sequelize, Sequelize);\ndb.person = require(\"./person.model.js\")(sequelize, Sequelize);\ndb.pointofcontact = require(\"./poc.model.js\")(sequelize, Sequelize);\ndb.relationshipmanager = require(\"./relationship_manager.model.js\")(sequelize, Sequelize);\ndb.relationship = require(\"./relationship.model.js\")(sequelize, Sequelize);\ndb.email = require(\"./email.model.js\")(sequelize, Sequelize);\ndb.file = require(\"./file.model.js\")(sequelize, Sequelize);\ndb.user = require('./user.model.js')(sequelize, Sequelize);\ndb.role = require('./role.model.js')(sequelize, Sequelize);\ndb.permission = require('./permission.model.js')(sequelize, Sequelize);\ndb.user_roles = require('./user_roles.model.js')(sequelize, Sequelize);\ndb.role_permissions = require('./role_permissions.model.js')(sequelize, Sequelize);\ndb.county = require('./county.model.js')(sequelize, Sequelize);\ndb.organization_county = require('./organization_county.model.js')(sequelize, Sequelize);\ndb.line_of_business = require('./line_of_business.js')(sequelize, Sequelize);\ndb.organization_lines_of_busines = require('./organization_lines_of_business.model.js')(sequelize, Sequelize);\ndb.arc_relationship = require('./arc_relationship.model')(sequelize, Sequelize);\ndb.agency_type = require('./agency_type.model')(sequelize, Sequelize);\ndb.organization_agency_type = require('./organization_agency_type.model')(sequelize, Sequelize);\ndb.organization_arc_relationship = require('./organization_arc_relationship.model')(sequelize, Sequelize);\n\n//Relationship building\n// db.organization.hasMany(db.note, {onDelete: 'CASCADE'});\n// db.note.belongsTo(db.organization);\ndb.person.hasMany(db.note);\ndb.note.belongsTo(db.person);\ndb.organization.hasOne(db.partner, {onDelete: 'CASCADE'});\ndb.partner.belongsTo(db.organization);\ndb.organization.hasOne(db.relationship, {onDelete: 'CASCADE'});\ndb.relationship.belongsTo(db.organization);\ndb.organization.hasMany(db.phone, {onDelete: 'CASCADE'});\ndb.phone.belongsTo(db.organization);\ndb.person.hasMany(db.phone, {onDelete: 'CASCADE'});\ndb.phone.belongsTo(db.person);\ndb.organization.hasMany(db.email, {onDelete: 'CASCADE'});\ndb.email.belongsTo(db.organization);\ndb.person.hasMany(db.email, {onDelete: 'CASCADE'});\ndb.email.belongsTo(db.person);\ndb.organization.belongsToMany(db.person, {through: db.pointofcontact});\ndb.person.belongsToMany(db.organization, {through: db.pointofcontact});\ndb.organization.hasMany(db.relationshipmanager, {onDelete: 'CASCADE'});\ndb.relationshipmanager.belongsTo(db.organization);\ndb.person.hasMany(db.relationshipmanager, {onDelete: 'CASCADE'});\ndb.relationshipmanager.belongsTo(db.person);\ndb.organization.hasMany(db.file);\ndb.file.belongsTo(db.organization);\ndb.person.hasMany(db.file);\ndb.file.belongsTo(db.person);\ndb.user.belongsTo(db.person);\ndb.person.hasOne(db.user);\ndb.user.belongsToMany(db.role, { through: db.user_roles });\ndb.permission.belongsToMany(db.role, { through: db.role_permissions});\ndb.organization.belongsToMany(db.county, {through: db.organization_county});\ndb.county.belongsToMany(db.organization, {through: db.organization_county});\ndb.organization.belongsToMany(db.line_of_business, {through: db.organization_lines_of_busines});\ndb.line_of_business.belongsToMany(db.organization, {through: db.organization_lines_of_busines});\ndb.organization.belongsToMany(db.arc_relationship, {through: db.organization_arc_relationship});\ndb.arc_relationship.belongsToMany(db.organization, {through: db.organization_arc_relationship});\ndb.organization.belongsToMany(db.agency_type, {through: db.organization_agency_type});\ndb.agency_type.belongsToMany(db.organization, {through: db.organization_agency_type});\n\nmodule.exports = db;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/models/index.js	(revision 9d2efd8714c367315bb5f9c68632afe37c513c49)
+++ src/models/index.js	(date 1610317645421)
@@ -1,4 +1,4 @@
-const dbConfig = require("../config/db.config.js");
+const dbConfig = require("../config/db.config0.js");
 
 const Sequelize = require("sequelize");
 const sequelize = new Sequelize(dbConfig.DB, dbConfig.USER, dbConfig.PASSWORD, {
